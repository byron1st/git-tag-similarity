name: Create Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    # Only run if PR was merged and came from a releases/* branch
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'releases/')

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION="${BRANCH_NAME#releases/}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Create and push tag
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"

      - name: Get previous tag
        id: previous_tag
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          # Get the tag before the current one
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -v "^$VERSION$" | head -n 1)
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag, use first commit
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          echo "Previous tag: $PREVIOUS_TAG"

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          PREVIOUS_TAG="${{ steps.previous_tag.outputs.previous_tag }}"

          # Create release notes with commit list
          echo "## Changes since $PREVIOUS_TAG" > release_notes.md
          echo "" >> release_notes.md

          # Get commit list between previous tag and current version
          git log $PREVIOUS_TAG..$VERSION --pretty=format:"- %s (%h)" --no-merges >> release_notes.md

          cat release_notes.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
